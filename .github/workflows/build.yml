name: build
env:
  TZ: Asia/Shanghai

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: install python build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y git make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev wget curl llvm

      - name: install python
        run: |
          curl -s -S -L https://pyenv.run | bash

          export PYENV_ROOT="$HOME/.pyenv"
          export PATH="$PYENV_ROOT/bin:$PATH"
          eval "$(pyenv init --path)"

          pyenv install 2.7.18
          pyenv global 2.7.18

      - name: set default python version
        run: |
          PY2_PATH="$HOME/.pyenv/versions/2.7.18/bin/python"
          sudo update-alternatives --install /usr/bin/python python $PY2_PATH 100
          sudo update-alternatives --set python $PY2_PATH

      - name: check python
        run: |
          python --version

      - name: checkout
        uses: actions/checkout@v4

      - name: set env
        run: |
          echo "CC=ccache clang -Qunused-arguments" >> $GITHUB_ENV
          echo "CXX=ccache clang++ -Qunused-arguments" >> $GITHUB_ENV
          echo "START_TIME=$(date '+%s')" >> $GITHUB_ENV
          mkdir -p "$PWD/run"
          echo "FLAG_STOP=$PWD/run/ninjaStop" >> $GITHUB_ENV
          echo "ROOT=$PWD" >> $GITHUB_ENV

      - run: $ROOT/script/download_ccache.sh
      - run: $ROOT/script/create_ccache_config.sh
      - run: $ROOT/script/maximize_build_space.sh
      - run: $ROOT/script/download_depot.sh
      - run: $ROOT/script/download_cipd.sh
      - run: $ROOT/script/download_src.sh
      - run: $ROOT/script/gen.sh
      - run: $ROOT/script/auto_kill.sh
      - run: $ROOT/script/build_step.sh base
      - run: $ROOT/script/build_step.sh chrome_java
      - run: $ROOT/script/build_step.sh components/guest_view/renderer
      - run: $ROOT/script/build_step.sh chrome/gpu
      - run: $ROOT/script/build_step.sh components/version_info
      - run: $ROOT/script/build_step.sh ui/base
      - run: $ROOT/script/build_step.sh chrome/browser:resources
      - run: $ROOT/script/build_step.sh chrome/browser/ui
      - run: $ROOT/script/build_step.sh chrome/browser
      - run: $ROOT/script/build_step.sh chrome/common
      - run: $ROOT/script/build_step.sh chrome/renderer
      - run: $ROOT/script/build_step.sh extensions
      - run: $ROOT/script/build_step.sh services
      - run: $ROOT/script/build_step.sh v8
      - run: $ROOT/script/build_step.sh chrome_public_apk
      - run: killall sleep || true

      - name: Uploading APK
        if: hashFiles(env.FLAG_STOP) == ''
        uses: actions/upload-artifact@v4
        with:
          name: apk-arm64
          path: ./src/out/arm64/apks/
